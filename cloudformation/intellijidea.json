{
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/Resource"
      }
    },
    "VPCnameSubnet1Subnet24E8C1B2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "name"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet1/Subnet"
      }
    },
    "VPCnameSubnet1RouteTableD2428692": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet1/RouteTable"
      }
    },
    "VPCnameSubnet1RouteTableAssociationFB89F300": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet1RouteTableD2428692"
        },
        "SubnetId": {
          "Ref": "VPCnameSubnet1Subnet24E8C1B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet1/RouteTableAssociation"
      }
    },
    "VPCnameSubnet1DefaultRouteE5EF91CD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet1RouteTableD2428692"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet1/DefaultRoute"
      }
    },
    "VPCnameSubnet2Subnet24D043E3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "name"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet2/Subnet"
      }
    },
    "VPCnameSubnet2RouteTable6C3BE551": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet2/RouteTable"
      }
    },
    "VPCnameSubnet2RouteTableAssociationE561BFE7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet2RouteTable6C3BE551"
        },
        "SubnetId": {
          "Ref": "VPCnameSubnet2Subnet24D043E3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet2/RouteTableAssociation"
      }
    },
    "VPCnameSubnet2DefaultRoute5882EEE6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet2RouteTable6C3BE551"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet2/DefaultRoute"
      }
    },
    "VPCnameSubnet3SubnetFE54B8E4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "name"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet3/Subnet"
      }
    },
    "VPCnameSubnet3RouteTable9FA632CE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC/nameSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet3/RouteTable"
      }
    },
    "VPCnameSubnet3RouteTableAssociation85A82AEF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet3RouteTable9FA632CE"
        },
        "SubnetId": {
          "Ref": "VPCnameSubnet3SubnetFE54B8E4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet3/RouteTableAssociation"
      }
    },
    "VPCnameSubnet3DefaultRoute26D328D0": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCnameSubnet3RouteTable9FA632CE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/nameSubnet3/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/VPC/VPCGW"
      }
    },
    "Ec2SecurityGroup55889913": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow ssh access to ec2 instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow ssh access from the world",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow rdp access from the world",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/Ec2SecurityGroup/Resource"
      }
    },
    "InstanceInstanceProfileAB5AEF02": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          "LabRole"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/Instance/InstanceProfile"
      }
    },
    "ideInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "IamInstanceProfile": {
          "Ref": "InstanceInstanceProfileAB5AEF02"
        },
        "ImageId": "ami-065024219ebe5213e",
        "InstanceType": "m5.large",
        "KeyName": "vockey",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Ec2SecurityGroup55889913",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCnameSubnet1Subnet24E8C1B2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ide-stack-dev/Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell># fingerprint: 6c6f01ca6ce62eb2\ncfn-init.exe -v --region ",
                {
                  "Ref": "AWS::Region"
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource ideInstance --url https://cloudformation.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                " --role LabRole -c default\ncfn-signal.exe -e $LASTEXITCODE --region ",
                {
                  "Ref": "AWS::Region"
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource ideInstance --url https://cloudformation.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                " --role LabRole\ntype C:\\cfn\\log\\cfn-init.log</powershell>"
              ]
            ]
          }
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT1H"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/Instance/Resource",
        "AWS::CloudFormation::Init": {
          "configSets": {
            "default": [
              "chocolateyPreInstall",
              "windowsBase",
              "devTools",
              "complete"
            ]
          },
          "chocolateyPreInstall": {
            "commands": {
              "01-InstallChoco": {
                "command": "powershell.exe iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))",
                "waitAfterCompletion": 0
              },
              "02-Restart": {
                "command": "powershell.exe -Command Restart-Computer -force",
                "waitAfterCompletion": "forever"
              }
            }
          },
          "windowsBase": {
            "packages": {
              "msi": {
                "000": "https://s3.amazonaws.com/aws-cli/AWSCLI64.msi"
              }
            },
            "files": {
              "c:\\cfn\\DisableESC.ps1": {
                "content": "function Disable-InternetExplorerESC {\r\n    $AdminKey = \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}\"\r\n    $UserKey = \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}\"\r\n    Set-ItemProperty -Path $AdminKey -Name \"IsInstalled\" -Value 0 -Force\r\n    Set-ItemProperty -Path $UserKey -Name \"IsInstalled\" -Value 0 -Force\r\n    Stop-Process -Name Explorer -Force\r\n    Write-Host \"IE Enhanced Security Configuration (ESC) has been disabled.\" -ForegroundColor Green\r\n}\r\nfunction Enable-InternetExplorerESC {\r\n    $AdminKey = \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}\"\r\n    $UserKey = \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}\"\r\n    Set-ItemProperty -Path $AdminKey -Name \"IsInstalled\" -Value 1 -Force\r\n    Set-ItemProperty -Path $UserKey -Name \"IsInstalled\" -Value 1 -Force\r\n    Stop-Process -Name Explorer\r\n    Write-Host \"IE Enhanced Security Configuration (ESC) has been enabled.\" -ForegroundColor Green\r\n}\r\nfunction Disable-UserAccessControl {\r\n    Set-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -Name \"ConsentPromptBehaviorAdmin\" -Value 00000000 -Force\r\n    Write-Host \"User Access Control (UAC) has been disabled.\" -ForegroundColor Green\r\n}\r\nDisable-UserAccessControl\r\nDisable-InternetExplorerESC",
                "encoding": "plain"
              },
              "c:\\cfn\\EnableSshServer.ps1": {
                "content": "Write-Output \"Install SSH Server\"\r\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\r\n# Start the sshd service\r\nStart-Service sshd\r\n# OPTIONAL but recommended:\r\nSet-Service -Name sshd -StartupType 'Automatic'\r\n\r\n# Confirm the Firewall rule is configured. It should be created automatically by setup. Run the following to verify\r\nif (!(Get-NetFirewallRule -Name \"OpenSSH-Server-In-TCP\" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {\r\n    Write-Output \"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it...\"\r\n    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\r\n} else {\r\n    Write-Output \"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists.\"\r\n}",
                "encoding": "plain"
              }
            },
            "commands": {
              "01-disableESC": {
                "command": "powershell.exe -File \"c:\\cfn\\DisableESC.ps1\"",
                "ignoreErrors": true,
                "waitAfterCompletion": 0
              },
              "02-EnableSshServer": {
                "command": "powershell.exe -File \"c:\\cfn\\EnableSshServer.ps1\"",
                "waitAfterCompletion": 0
              }
            }
          },
          "devTools": {
            "commands": {
              "00-install": {
                "command": "powershell.exe choco install python3 -y",
                "waitAfterCompletion": 0
              },
              "01-install": {
                "command": "powershell.exe choco install oraclejdk -y",
                "waitAfterCompletion": 0
              },
              "02-install": {
                "command": "powershell.exe choco install node -y",
                "waitAfterCompletion": 0
              },
              "03-install": {
                "command": "powershell.exe choco install googlechrome -y",
                "waitAfterCompletion": 0
              },
              "04-install": {
                "command": "powershell.exe choco install git -y",
                "waitAfterCompletion": 0
              },
              "05-install": {
                "command": "powershell.exe choco install 7zip.install -y",
                "waitAfterCompletion": 0
              },
              "06-install": {
                "command": "powershell.exe choco install vscode -y",
                "waitAfterCompletion": 0
              },
              "07-install": {
                "command": "powershell.exe choco install intellijidea -y",
                "waitAfterCompletion": 0
              }
            }
          },
          "complete": {
            "commands": {
              "00-Signal": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "cfn-signal.exe -e %ERRORLEVEL% --resource ideInstance --stack ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " --region us-east-1"
                    ]
                  ]
                },
                "waitAfterCompletion": 5
              }
            }
          }
        }
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOwQ6CMAyGn8X7qIrRu/FgvBEwXs2YNVahI1unIYR3FwVFT/365U//xrCE2UQ/fGROt6igHJpMtLmpTh0bNDE0h8qozZkPyUYlIS/IZCFnlJcbKbVBcK/zAkc/urX31pAWsvwNv2DHgq5LbrXgQ9dDzbCtpXvkUiKLytAER1JvnQ3Vu+BP7NiLZjOc7LlVpEv4EYmzZyo6n6K3wfXpD7eK7Qnh6qf3+QrmC4gnV08UucBCJULazyfD0AckLgEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ide-stack-dev/CDKMetadata/Default"
      }
    }
  }
}